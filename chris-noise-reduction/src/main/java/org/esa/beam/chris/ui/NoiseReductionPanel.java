package org.esa.beam.chris.ui;

import com.jidesoft.grid.BooleanCheckBoxCellEditor;
import com.jidesoft.grid.BooleanCheckBoxCellRenderer;
import org.esa.beam.framework.datamodel.Product;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;

/**
 * @author Marco Peters
 * @author Ralf Quast
 * @version $Revision$ $Date$
 */
public class NoiseReductionPanel extends JPanel {

    private JPanel dataPanel;
    private JPanel aquisitionSetPanel;
    private JScrollPane aqusitionScrollPane;
    private JTable aquisitionImageTable;
    private JButton addButton;
    private JButton removeButton;

    private JPanel metadataPanel;
    private JTable metadataTable;

    private JButton advancedSettingsButton;

// todo - remove this when finished

    public static void main(String[] args) {
        final JFrame frame = new JFrame("Noise Reduction");
        final NoiseReductionPresenter nrPresenter = new NoiseReductionPresenter(new Product[0],
                                                                                new AdvancedSettingsPresenter());
        nrPresenter.setWindow(frame);
        frame.setContentPane(new NoiseReductionPanel(nrPresenter));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * Creates new form NRPanel
     */
    public NoiseReductionPanel(NoiseReductionPresenter nrPresenter) {
        initComponents();
        bindComponents(nrPresenter);
    }

    private void bindComponents(NoiseReductionPresenter nrPresenter) {
        aquisitionImageTable.setModel(nrPresenter.getProductsTableModel());
        aquisitionImageTable.setSelectionModel(nrPresenter.getProductsTableSelectionModel());

        TableColumn firstTableColumn = aquisitionImageTable.getColumnModel().getColumn(0);
        firstTableColumn.setCellRenderer(new BooleanCheckBoxCellRenderer());
        firstTableColumn.setCellEditor(new BooleanCheckBoxCellEditor());

        firstTableColumn.setPreferredWidth(60);
        firstTableColumn.setMaxWidth(60);

        TableColumn secondTableColumn = aquisitionImageTable.getColumnModel().getColumn(1);
        secondTableColumn.setCellRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                                                           boolean hasFocus,
                                                           int row, int column) {
                Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row,
                                                                          column);
                if (component instanceof JLabel && value instanceof Product) {
                    JLabel label = (JLabel) component;
                    Product product = (Product) value;
                    label.setText(product.getName());
                    return label;
                }
                return component;

            }

        });

        metadataTable.setModel(nrPresenter.getMetadataTableModel());

        addButton.setAction(nrPresenter.getAddProductAction());
        removeButton.setAction(nrPresenter.getRemoveProductAction());
        advancedSettingsButton.setAction(nrPresenter.getSettingsAction());
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        dataPanel = new JPanel();
        aquisitionSetPanel = new JPanel();
        aqusitionScrollPane = new JScrollPane();
        aquisitionImageTable = new JTable();
        addButton = new JButton();
        removeButton = new JButton();
        metadataPanel = new JPanel();
        metadataTable = new JTable();
        advancedSettingsButton = new JButton();

        setLayout(new BorderLayout(5, 5));

        dataPanel.setLayout(new BorderLayout());

        aquisitionSetPanel.setLayout(new GridBagLayout());

        aquisitionSetPanel.setBorder(BorderFactory.createTitledBorder(null, "Aquisition Set",
                                                                      TitledBorder.DEFAULT_JUSTIFICATION,
                                                                      TitledBorder.DEFAULT_POSITION,
                                                                      new Font("Tahoma", 0, 11),
                                                                      new Color(0, 70, 213)));
        aquisitionSetPanel.setPreferredSize(new Dimension(450, 200));
        aqusitionScrollPane.setPreferredSize(new Dimension(300, 150));
        aquisitionImageTable.setPreferredSize(new Dimension(300, 150));
        aquisitionImageTable.setFillsViewportHeight(true);
        aqusitionScrollPane.setViewportView(aquisitionImageTable);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        aquisitionSetPanel.add(aqusitionScrollPane, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        aquisitionSetPanel.add(addButton, gridBagConstraints);


        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        aquisitionSetPanel.add(removeButton, gridBagConstraints);

        dataPanel.add(aquisitionSetPanel, BorderLayout.CENTER);

        metadataPanel.setLayout(new GridBagLayout());

        metadataPanel.setBorder(BorderFactory.createTitledBorder(null, "Image Metadata",
                                                                 TitledBorder.DEFAULT_JUSTIFICATION,
                                                                 TitledBorder.DEFAULT_POSITION,
                                                                 new Font("Tahoma", 0, 11),
                                                                 new Color(0, 70, 213)));
        metadataTable.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        metadataTable.setTableHeader(null);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        metadataPanel.add(metadataTable, gridBagConstraints);

        dataPanel.add(metadataPanel, BorderLayout.SOUTH);

        add(dataPanel, BorderLayout.CENTER);

        JPanel settingsButtonPanel = new JPanel(new GridBagLayout());
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.fill = GridBagConstraints.NONE;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(0, 5, 5, 5);
        settingsButtonPanel.add(advancedSettingsButton, gridBagConstraints);
        add(settingsButtonPanel, BorderLayout.SOUTH);

    }


}
