package org.esa.beam.chris.ui;

import org.esa.beam.framework.datamodel.Product;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

/**
 * @author Marco Peters
 * @author Ralf Quast
 * @version $Revision$ $Date$
 */
public class NoiseReductionPanel extends JPanel {

    private javax.swing.JButton addButton;
    private javax.swing.JButton advancedSettingsButton;
    private javax.swing.JPanel advancedSettingsPanel;
    private javax.swing.JList aquisitionImageList;
    private javax.swing.JPanel aquisitionSetPanel;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel dropoutPanel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JPanel metadataPanel;
    private javax.swing.JTable metadataTable;
    private javax.swing.JPanel optionalSettingsPanel;
    private javax.swing.JButton removeButton;
    private javax.swing.JPanel verticalStripingPanel;

    public static void main(String[] args) {
        JFrame frame = new JFrame("Noise Reduction");
        NoiseReductionPresenter presenter = new NoiseReductionPresenter(new Product[0]);
        frame.setContentPane(new NoiseReductionPanel(presenter));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * Creates new form NRPanel
     */
    public NoiseReductionPanel(NoiseReductionPresenter presenter) {
        initComponents(presenter);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     * @param presenter
     */
    private void initComponents(NoiseReductionPresenter presenter) {
        GridBagConstraints gridBagConstraints;

        dataPanel = new JPanel();
        aquisitionSetPanel = new JPanel();
        jScrollPane1 = new JScrollPane();
        aquisitionImageList = new JList();
        addButton = new JButton();
        removeButton = new JButton();
        metadataPanel = new JPanel();
        metadataTable = new JTable();
        optionalSettingsPanel = new JPanel();
        jPanel4 = new JPanel();
        advancedSettingsButton = new JButton();
        advancedSettingsPanel = new JPanel();
        verticalStripingPanel = new JPanel();
        jCheckBox1 = new JCheckBox();
        jSpinner1 = new JSpinner();
        jLabel1 = new JLabel();
        jLabel4 = new JLabel();
        dropoutPanel = new JPanel();
        jLabel2 = new JLabel();
        jComboBox1 = new JComboBox();
        jLabel3 = new JLabel();
        jComboBox2 = new JComboBox();

        setLayout(new BorderLayout(5, 5));

        dataPanel.setLayout(new BorderLayout());

        aquisitionSetPanel.setLayout(new GridBagLayout());

        aquisitionSetPanel.setBorder(BorderFactory.createTitledBorder(null, "Aquisition Set",
                                                                      TitledBorder.DEFAULT_JUSTIFICATION,
                                                                      TitledBorder.DEFAULT_POSITION,
                                                                      new Font("Tahoma", 0, 11),
                                                                      new Color(0, 70, 213)));
        aquisitionSetPanel.setPreferredSize(new Dimension(100, 130));
        jScrollPane1.setPreferredSize(new Dimension(300, 150));
        aquisitionImageList.setModel(new AbstractListModel() {
            String[] strings = {"Product 1", "Product 2", "Product 3", "Product 4", "Product 5"};

            public int getSize() {
                return strings.length;
            }

            public Object getElementAt(int i) {
                return strings[i];
            }
        });
        aquisitionImageList.setPreferredSize(new Dimension(150, 80));
        jScrollPane1.setViewportView(aquisitionImageList);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        aquisitionSetPanel.add(jScrollPane1, gridBagConstraints);

        addButton.setText("Add");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        aquisitionSetPanel.add(addButton, gridBagConstraints);

        removeButton.setText("Remove");

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        aquisitionSetPanel.add(removeButton, gridBagConstraints);

        dataPanel.add(aquisitionSetPanel, BorderLayout.NORTH);

        metadataPanel.setLayout(new GridBagLayout());

        metadataPanel.setBorder(BorderFactory.createTitledBorder(null, "Image Metadata",
                                                                 TitledBorder.DEFAULT_JUSTIFICATION,
                                                                 TitledBorder.DEFAULT_POSITION,
                                                                 new Font("Tahoma", 0, 11),
                                                                 new Color(0, 70, 213)));
        metadataTable.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        metadataTable.setModel(new DefaultTableModel(
                new Object [][]{
                        {"CHRIS-Mode", null},
                        {"Target Coordinates", null},
                        {"Fly-By Zenith", null},
                        {"Minimal Zenith", null}
                },
                new String []{
                        "Name", "Value"
                }
        ) {
            Class[] types = new Class []{
                    java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []{
                    false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        metadataTable.setTableHeader(null);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        metadataPanel.add(metadataTable, gridBagConstraints);

        dataPanel.add(metadataPanel, BorderLayout.SOUTH);

        add(dataPanel, BorderLayout.NORTH);

        optionalSettingsPanel.setLayout(new GridBagLayout());

        jPanel4.setLayout(new GridLayout(1, 0));

        advancedSettingsButton.setText("Advanced Settings");
        advancedSettingsButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                boolean oldVisible = advancedSettingsPanel.isVisible();
                advancedSettingsPanel.setVisible(!oldVisible);
            }
        });
        jPanel4.add(advancedSettingsButton);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        optionalSettingsPanel.add(jPanel4, gridBagConstraints);

        advancedSettingsPanel.setLayout(new GridBagLayout());

        verticalStripingPanel.setLayout(new GridBagLayout());

        verticalStripingPanel.setBorder(BorderFactory.createTitledBorder(null,
                                                                         "Vertical Striping Correction",
                                                                         TitledBorder.DEFAULT_JUSTIFICATION,
                                                                         TitledBorder.DEFAULT_POSITION,
                                                                         new Font("Tahoma", 0, 11),
                                                                         new Color(0, 70, 213)));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Apply Slit Correction");
        jCheckBox1.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setHorizontalTextPosition(SwingConstants.LEFT);
        jCheckBox1.setMargin(new Insets(0, 0, 0, 0));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(0, 3, 0, 10);
        verticalStripingPanel.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new Insets(0, 0, 0, 3);
        jSpinner1.setModel(new SpinnerNumberModel(27, 11, 39, 2));
        verticalStripingPanel.add(jSpinner1, gridBagConstraints);

        jLabel1.setText("Smoothing Order:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(0, 10, 0, 3);
        verticalStripingPanel.add(jLabel1, gridBagConstraints);

        jLabel4.setText("pixels");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        verticalStripingPanel.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        advancedSettingsPanel.add(verticalStripingPanel, gridBagConstraints);

        dropoutPanel.setLayout(new GridBagLayout());

        dropoutPanel.setBorder(BorderFactory.createTitledBorder(null, "Dropout Correction",
                                                                TitledBorder.DEFAULT_JUSTIFICATION,
                                                                TitledBorder.DEFAULT_POSITION,
                                                                new Font("Tahoma", 0, 11),
                                                                new Color(0, 70, 213)));
        jLabel2.setText("Number Of Spectral Bands:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(0, 3, 3, 10);
        dropoutPanel.add(jLabel2, gridBagConstraints);

        jComboBox1.setModel(new DefaultComboBoxModel(new String[]{"5", "6", "7"}));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new Insets(0, 0, 3, 3);
        dropoutPanel.add(jComboBox1, gridBagConstraints);

        jLabel3.setText("Neighbourhood Type:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(0, 3, 0, 10);
        dropoutPanel.add(jLabel3, gridBagConstraints);

        jComboBox2.setModel(new DefaultComboBoxModel(new String[]{"2-Connected", "4-Connected", "8-Connected"}));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new Insets(0, 0, 0, 3);
        dropoutPanel.add(jComboBox2, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        advancedSettingsPanel.add(dropoutPanel, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        optionalSettingsPanel.add(advancedSettingsPanel, gridBagConstraints);

        add(optionalSettingsPanel, BorderLayout.CENTER);

        presenter.addPropteryChangeListener(new PropertyChangeListener(){
            public void propertyChange(PropertyChangeEvent evt) {
                // todo
            }
        });
    }


}
